! ===============================================================
! =                                                             =
! =                    THE VECTOR LIDORT MODEL                  =
! =                                                             =
! =  (Vector LInearized Discrete Ordinate Radiative Transfer)   =
! =   -      --         -        -        -         -           =
! =                                                             =
! ===============================================================

! ===============================================================
! =                                                             =
! =  Author :      Robert. J. D. Spurr                          =
! =                                                             =
! =  Address :      RT Solutions, inc.                          =
! =            9 Channing Street                                =
! =             Cambridge, MA 02138, USA                        =
! =            Tel: (617) 492 1183                              =
! =                                                             =
! =  Email :      rtsolutions@verizon.net                       =
! =                                                             =
! =  Versions     :   2.0, 2.2, 2.3, 2.4, 2.4R, 2.4RT           =
! =  Release Date :   December 2005  (2.0)                      =
! =  Release Date :   March 2007     (2.2)                      =
! =  Release Date :   October 2007   (2.3)                      =
! =  Release Date :   December 2008  (2.4)                      =
! =  Release Date :   April/May 2009 (2.4R)                     =
! =  Release Date :   July 2009      (2.4RT)                    =
! =                                                             =
! =       NEW: TOTAL COLUMN JACOBIANS         (2.4)             =
! =       NEW: BPDF Land-surface KERNELS      (2.4R)            =
! =       NEW: Thermal Emission Treatment     (2.4RT)           =
! =                                                             =
! ===============================================================

!    =====================================================
!    =                                                   =
!    =   This Version of VLIDORT comes with a GNU-style  =
!    =   license. Please read the license carefully.     =
!    =                                                   =
!    =====================================================

!  This is VLIDORT.PARS.

!  File of constants for VLIDORT model.

!  Version number
!  ==============

      CHARACTER*5       VLIDORT_VERSION_NUMBER
      PARAMETER       ( VLIDORT_VERSION_NUMBER = '2.4RT' )

!  File i/o unit numbers
!  ======================

      INTEGER          VLIDORT_FUNIT, VLIDORT_INUNIT, VLIDORT_SCENUNIT
      INTEGER          VLIDORT_RESUNIT, VLIDORT_ERRUNIT
      PARAMETER       ( VLIDORT_INUNIT   = 21 )
      PARAMETER       ( VLIDORT_SCENUNIT = 22 )
      PARAMETER       ( VLIDORT_FUNIT    = 23 )
      PARAMETER       ( VLIDORT_RESUNIT  = 24 )
      PARAMETER       ( VLIDORT_ERRUNIT  = 25 )

!  Basic dimensions
!  ================

!  Computational dimensioning
!  --------------------------

!  Number of computational streams in the half-space

      INTEGER         MAXSTREAMS
      PARAMETER       ( MAXSTREAMS = 10 )

!  Maximum number of computational layers

      INTEGER         MAXLAYERS
      PARAMETER       ( MAXLAYERS = 101)

!  Maximum number of fine layers used in single scattering corrections

      INTEGER         MAXFINELAYERS
      PARAMETER       ( MAXFINELAYERS = 2 )

!  Maximum number of input moments.
!    (Use full range for exact single scatter calculations)

      INTEGER         MAXMOMENTS_INPUT
      PARAMETER       ( MAXMOMENTS_INPUT = 300 )

!  Max number of thermal coefficients
!   --------- New for Version 2.4RT -----------------

      INTEGER           MAX_THERMAL_COEFFS
      PARAMETER       ( MAX_THERMAL_COEFFS = 2 )

!  Geometrical and output parameters
!  ---------------------------------

!  Maximum number of solar zenith angles

      INTEGER         MAX_SZANGLES
      PARAMETER       ( MAX_SZANGLES = 2 )

!  maximum number of user-defined output zenith angles

      INTEGER         MAX_USER_VZANGLES
      PARAMETER       ( MAX_USER_VZANGLES = 2 )

!  maximum number of user-defined output relative azimuth angles

      INTEGER         MAX_USER_RELAZMS
      PARAMETER       ( MAX_USER_RELAZMS = 2 )

!  Maximum number of output optical depths

      INTEGER         MAX_USER_LEVELS
      PARAMETER       ( MAX_USER_LEVELS = 2 )

!  Maximum number of output optical depths away from layer boundaries 
!   This must be less than or equal to the previous entry

      INTEGER         MAX_PARTLAYERS
      PARAMETER       ( MAX_PARTLAYERS = 1 )

!  Fixed parameters
!  ----------------

!  Number of Stokes parameters

      INTEGER         MAXSTOKES
      PARAMETER       ( MAXSTOKES = 4 )

!  Two directions (Up and Down)

      INTEGER         MAX_DIRECTIONS
      PARAMETER       ( MAX_DIRECTIONS = 2 )

!  Surface BRDF dimensioning
!  -------------------------

!  Maximum number of BRDF kernels

      INTEGER         MAX_BRDF_KERNELS
      PARAMETER       ( MAX_BRDF_KERNELS = 3 )

!  Maximum number of BRDF parameters per kernel

      INTEGER         MAX_BRDF_PARAMETERS
      PARAMETER       ( MAX_BRDF_PARAMETERS = 3 )

!  Maximum number of azimuth-quadrature streams for BGRDF Fourier.

      INTEGER         MAXSTREAMS_BRDF, MAXSTHALF_BRDF
      PARAMETER       ( MAXSTREAMS_BRDF = 2 )
!      PARAMETER       ( MAXSTREAMS_BRDF = 51 )       ! best

!  Weighting functions
!  -------------------

!  Maximum number of profile/column weighting functions

      INTEGER          MAX_ATMOSWFS
      PARAMETER        ( MAX_ATMOSWFS = 15 )

!  Maximum number of surface property weighting functions

      INTEGER          MAX_SURFACEWFS
      PARAMETER        ( MAX_SURFACEWFS = 1 )

!  Derived dimensions
!  ==================

!  Copy Beam dimensioning

      INTEGER          MAXBEAMS
      PARAMETER        ( MAXBEAMS = MAX_SZANGLES )

!  Copy viewing zenith angle dimension

      INTEGER          MAX_USER_STREAMS
      PARAMETER        ( MAX_USER_STREAMS = MAX_USER_VZANGLES )

!  Maximum possible geometries

      INTEGER         MAX_GEOMETRIES
      PARAMETER       ( MAX_GEOMETRIES = &
                MAX_USER_VZANGLES*MAX_USER_RELAZMS*MAX_SZANGLES )

!  All streams

      INTEGER         MAX_ALLSTRMS
      PARAMETER       ( MAX_ALLSTRMS = MAX_USER_STREAMS + MAXSTREAMS )

!  All streams for the Legendre PI-matrix setup.
!   Refractive Goemetry setting: Watch out for Kill. Memory Hog
!      INTEGER         MAX_ALLSTRMS_P1
!      PARAMETER       ( MAX_ALLSTRMS_P1 =                         &
!                              MAX_ALLSTRMS + MAXBEAMS*MAXLAYERS )

!  All streams for the Legendre PI-matrix setup.
!   Straightline setting: This setting should avoid dimensioning error

      INTEGER         MAX_ALLSTRMS_P1
      PARAMETER       ( MAX_ALLSTRMS_P1 = MAX_ALLSTRMS + MAXBEAMS )

!  Maximum number of moments in the diffuse field calculation
!   This is always 2*MAXSTREAMS, in case we need DELTA-M

      INTEGER         MAXMOMENTS
      PARAMETER       ( MAXMOMENTS = 2*MAXSTREAMS )

!  Maximum number of Fourier components = 2*MAXSTREAMS - 1

      INTEGER         MAXFOURIER
      PARAMETER       ( MAXFOURIER = 2*MAXSTREAMS - 1 )

!  Number of Stokes streams squared

      INTEGER         MAXSTOKES_SQ
      PARAMETER       ( MAXSTOKES_SQ = 16 )

!  Half the number of BRDF azimuth quadratures

      PARAMETER       ( MAXSTHALF_BRDF = MAXSTREAMS_BRDF / 2 )

!  Other derived dimensions

      INTEGER         MAXSTREAMS_2, MAXSTREAMS_21
      INTEGER         MAXSTREAMS_P1, MAXSTREAMS_P2
      PARAMETER       ( MAXSTREAMS_2  = 2*MAXSTREAMS )
      PARAMETER       ( MAXSTREAMS_21  = 2*MAXSTREAMS - 1 )
      PARAMETER       ( MAXSTREAMS_P1 = MAXSTREAMS + 1 )
      PARAMETER       ( MAXSTREAMS_P2 = MAXSTREAMS + 2 )

      INTEGER         MAXSTRMSTKS, MAXSTRMSTKS_2, MAXSTRMSTKS_21
      PARAMETER       ( MAXSTRMSTKS     = MAXSTREAMS * MAXSTOKES )
      PARAMETER       ( MAXSTRMSTKS_2   = 2*MAXSTRMSTKS )
      PARAMETER       ( MAXSTRMSTKS_21  = 2*MAXSTRMSTKS - 1 )

      INTEGER         MAXSTRMSTKS_P1, MAXSTRMSTKS_P2, MAXSTRMSTKS_P4
      PARAMETER       ( MAXSTRMSTKS_P1 = MAXSTRMSTKS + 1 )
      PARAMETER       ( MAXSTRMSTKS_P2 = MAXSTRMSTKS + 2 )
      PARAMETER       ( MAXSTRMSTKS_P4 = MAXSTRMSTKS + 4 )

      INTEGER         MAX_USTRMSTKS
      PARAMETER       ( MAX_USTRMSTKS = MAX_USER_STREAMS * MAXSTOKES )

!  Maximum number of eigenvalues

      INTEGER         MAXEVALUES
      PARAMETER       ( MAXEVALUES = MAXSTRMSTKS )

!  For the BVP problem

      INTEGER         MAXTOTAL, MAXBANDTOTAL
      PARAMETER       ( MAXTOTAL = MAXLAYERS*MAXSTRMSTKS_2 )
      PARAMETER       ( MAXBANDTOTAL = 9*MAXSTRMSTKS - 2 )

!  Not so far used

      INTEGER         MAX_PSOLS, MAX_SCATPSOLS
      PARAMETER       ( MAX_PSOLS = 2 )
      PARAMETER       ( MAX_SCATPSOLS = MAX_PSOLS )

!  Format constants
!  ================

      CHARACTER *(*)  FMT_HEADING
      PARAMETER       ( FMT_HEADING = '( / T6, ''-----> '', A, /)' )

      CHARACTER *(*)  FMT_INTEGER
      PARAMETER       ( FMT_INTEGER = '(T6, A, T58, I10)' )

      CHARACTER *(*)  FMT_REAL
      PARAMETER       ( FMT_REAL = '(T6, A, T58, 1PG14.6)' )

      CHARACTER *(*)  FMT_CHAR
      PARAMETER       ( FMT_CHAR = '(T6, A, T48, A20)' )

      CHARACTER *(*)  FMT_SECTION
      PARAMETER       ( FMT_SECTION = '( / T6, ''-----> '', A, /)' )
!     $                  '( // T6 
!     $                  ''----------------------------------------'', 
!     $                  ''-----------------------------------'', 
!     $                      / T6 A, 
!     $                      / T6  
!     $                  ''----------------------------------------'', 
!     $                  ''-----------------------------------'', 
!     $                          / )' )

!  numbers
!  =======

      DOUBLE PRECISION FOUR,THREE,TWO,ONEP5,ONE,ZERO
      DOUBLE PRECISION MINUS_ONE,MINUS_TWO
      DOUBLE PRECISION HALF,QUARTER,DEG_TO_RAD,PIE,PI4,PI2,PIO2,PIO4
      DOUBLE PRECISION EPS3, EPS4, EPS5
      DOUBLE PRECISION SMALLNUM, BIGEXP

      PARAMETER       ( ONE = 1.0D0, ZERO = 0.0D0,  ONEP5 = 1.5D0 )
      PARAMETER       ( TWO = 2.0D0, THREE = 3.0D0, FOUR = 4.0D0 )
      PARAMETER       ( QUARTER = 0.25D0, HALF = 0.5D0 )
      PARAMETER       ( MINUS_ONE = -ONE )
      PARAMETER       ( MINUS_TWO = -TWO )
      PARAMETER       ( DEG_TO_RAD = 1.7453292519943D-02 )
      PARAMETER       ( PIE = 180.0D0*DEG_TO_RAD )
      PARAMETER       ( PI2 = 2.0D0 * PIE )
      PARAMETER       ( PI4 = 4.0D0 * PIE )
      PARAMETER       ( PIO2 = HALF * PIE )
      PARAMETER       ( PIO4 = QUARTER * PIE )
      PARAMETER       ( EPS3 = 0.001D0 )
      PARAMETER       ( EPS4 = 0.0001D0 )
      PARAMETER       ( EPS5 = 0.00001D0 )
      PARAMETER       ( SMALLNUM = 1.0D-15 )
      PARAMETER       ( BIGEXP = 32.0D0 )

!  Control for Using L'Hopital's Rule
!   Changed, January 2009 for Version 2.4..........

      DOUBLE PRECISION HOPITAL_TOLERANCE
      PARAMETER       ( HOPITAL_TOLERANCE = EPS3 )
!      PARAMETER       ( HOPITAL_TOLERANCE = EPS5 )

!  Control for limits of single scatter albedo

      DOUBLE PRECISION OMEGA_SMALLNUM
      PARAMETER       ( OMEGA_SMALLNUM = 1.0D-15 )

!  Control for limits of extinction optical depth along solar path

      DOUBLE PRECISION MAX_TAU_SPATH
      PARAMETER       ( MAX_TAU_SPATH = 32.0D0 )

!  Control for limits of extinction optical depth along USER paths

      DOUBLE PRECISION MAX_TAU_UPATH
      PARAMETER       ( MAX_TAU_UPATH = 32.0D0 )

!  Control for limits of extinction optical depth along QUADRATURE paths

      DOUBLE PRECISION MAX_TAU_QPATH
      PARAMETER       ( MAX_TAU_QPATH = 32.0D0 )

!  error indices
!  =============

      INTEGER           VLIDORT_SERIOUS
      PARAMETER       ( VLIDORT_SERIOUS  = 4 )

      INTEGER           VLIDORT_WARNING
      PARAMETER       ( VLIDORT_WARNING  = 3 )

      INTEGER           VLIDORT_INFO
      PARAMETER       ( VLIDORT_INFO     = 2 )

      INTEGER           VLIDORT_DEBUG
      PARAMETER       ( VLIDORT_DEBUG    = 1 )

      INTEGER           VLIDORT_SUCCESS
      PARAMETER       ( VLIDORT_SUCCESS  = 0 )

!  directional indices

      INTEGER         UPIDX
      PARAMETER       ( UPIDX  = 1 )

      INTEGER         DNIDX
      PARAMETER       ( DNIDX  = 2 )

!  surface indices
!  ---------------

!  These refer to the BRDF kernel functions currently included.

      INTEGER          LAMBERTIAN_IDX
      INTEGER          ROSSTHIN_IDX
      INTEGER          ROSSTHICK_IDX
      INTEGER          LISPARSE_IDX
      INTEGER          LIDENSE_IDX
      INTEGER          HAPKE_IDX
      INTEGER          ROUJEAN_IDX
      INTEGER          RAHMAN_IDX
      INTEGER          COXMUNK_IDX
      INTEGER          GISSCOXMUNK_IDX

!  New indices for two Land surface models (July 2008)

      INTEGER          RHERMAN_IDX
      INTEGER          BREON_IDX

!  New for Version 2.4R

      INTEGER          BPDF2008VEG_IDX
      INTEGER          BPDF2008SOIL_IDX
      INTEGER          BPDF2009_IDX

!  These never used up to and including Version 2.4

!      INTEGER          GISSSOIL_IDX
!      INTEGER          GISSSNOW_IDX

      PARAMETER       ( LAMBERTIAN_IDX   = 1 )
      PARAMETER       ( ROSSTHIN_IDX     = 2 )
      PARAMETER       ( ROSSTHICK_IDX    = 3 )
      PARAMETER       ( LISPARSE_IDX     = 4 )
      PARAMETER       ( LIDENSE_IDX      = 5 )
      PARAMETER       ( HAPKE_IDX        = 6 )
      PARAMETER       ( ROUJEAN_IDX      = 7 )
      PARAMETER       ( RAHMAN_IDX       = 8 )
      PARAMETER       ( COXMUNK_IDX      = 9 )
      PARAMETER       ( GISSCOXMUNK_IDX  = 10 )
      PARAMETER       ( RHERMAN_IDX      = 11 )
      PARAMETER       ( BREON_IDX        = 12 )
      PARAMETER       ( BPDF2008VEG_IDX  = 13 )
      PARAMETER       ( BPDF2008SOIL_IDX = 14 )
      PARAMETER       ( BPDF2009_IDX     = 15 )

!      PARAMETER       ( GISSSOIL_IDX    = 13 )
!      PARAMETER       ( GISSSNOW_IDX    = 14 )

      INTEGER          MAXBRDF_IDX
      PARAMETER       ( MAXBRDF_IDX = BPDF2009_IDX )

!      PARAMETER       ( MAXBRDF_IDX = GISSSNOW_IDX )

!  End of file.

