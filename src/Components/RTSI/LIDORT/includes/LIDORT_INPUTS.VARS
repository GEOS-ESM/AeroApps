C ###########################################################
C #                                                         #
C #                    THE LIDORT FAMILY                    #
C #                                                         #
C #      (LInearized Discrete Ordinate Radiative Transfer)  #
C #        --           -            -        -        -    #
C #                                                         #
C ###########################################################

C ###########################################################
C #                                                         #
C #  Author :      Robert. J. D. Spurr                      #
C #                                                         #
C #  Address :     RT Solutions, Inc.                       #
C #                9 Channing Street                        #
C #                Cambridge, MA 02138, USA                 #
C #                                                         #
C #  Tel:          (617) 492 1183                           #
C #  Email :        rtsolutions@verizon.net                 #
C #                                                         #
C #  This Version :   3.3                                   #
C #  Release Date :   September 2007                        #
C #                                                         #
C #       NEW: THERMAL SUPPLEMENT INCLUDED    (3.2)         #
C #       NEW: OUTGOING SPHERICITY CORRECTION (3.2)         #
C #       NEW: TOTAL COLUMN JACOBIANS         (3.3)         #
C #                                                         #
C ###########################################################

C    #####################################################
C    #                                                   #
C    #   This Version of LIDORT comes with a GNU-style   #
C    #   license. Please read the license carefully.     #
C    #                                                   #
C    #####################################################

C  File name : LIDORT_INPUTS.VARS
C  Purpose   : include file of input variables

C  A. CONTROL FLAGS
C  ================

C  Mode of operation
C  -----------------

C  Full Radiance  calculation

      LOGICAL             DO_FULLRAD_MODE

C  single scatter and direct beam corrections

      LOGICAL             DO_SSCORR_NADIR
      LOGICAL             DO_SSCORR_OUTGOING
      LOGICAL             DO_DBCORRECTION

C  Multiple scatter source term control (removed, 02 April 2007)
C      LOGICAL             SAVE_LAYER_MSST

C  Flag for performing a complete separate delta-M truncation on the
C  single scatter corrrection  calculations

      LOGICAL             DO_SSCORR_TRUNCATION

C  Flag for Full-up single scatter calculation

      LOGICAL             DO_SSFULL

C  double convergence test flag

      LOGICAL             DO_DOUBLE_CONVTEST

C  Solar beam control
C  ------------------

C  Basic top-level control

      LOGICAL             DO_SOLAR_SOURCES

C  particular solution control

      LOGICAL             DO_CLASSICAL_SOLUTION

C  Beam particular solution pseudo-spherical options

      LOGICAL             DO_PLANE_PARALLEL
      LOGICAL             DO_REFRACTIVE_GEOMETRY
      LOGICAL             DO_CHAPMAN_FUNCTION

C  scatterers and phase function control
C  -------------------------------------

      LOGICAL             DO_RAYLEIGH_ONLY
      LOGICAL             DO_ISOTROPIC_ONLY
      LOGICAL             DO_NO_AZIMUTH
      LOGICAL             DO_ALL_FOURIER

C  Performance control
c  -------------------

      LOGICAL             DO_FULL_QUADRATURE
      LOGICAL             DO_DELTAM_SCALING

C  2 new flags in Version 3.0

      LOGICAL             DO_SOLUTION_SAVING
      LOGICAL             DO_BVP_TELESCOPING

C  User-defined output control
C  ---------------------------

C  directional control

      LOGICAL             DO_UPWELLING
      LOGICAL             DO_DNWELLING

C  stream angle and optical depth

      LOGICAL             DO_QUAD_OUTPUT
      LOGICAL             DO_USER_STREAMS
      LOGICAL             DO_USER_TAUS
      LOGICAL             DO_LBOUND_TAUS

C  mean value control

      LOGICAL             DO_ADDITIONAL_MVOUT
      LOGICAL             DO_MVOUT_ONLY

C  Write control
C  -------------

      LOGICAL             DO_DEBUG_WRITE
      LOGICAL             DO_INFO_WRITE

      LOGICAL             DO_WRITE_INPUT
      LOGICAL             DO_WRITE_SCENARIO
      LOGICAL             DO_WRITE_FOURIER
      LOGICAL             DO_WRITE_RESULTS

C  filenames for output

      CHARACTER*(60)      INPUT_WRITE_FILENAME
      CHARACTER*(60)      SCENARIO_WRITE_FILENAME
      CHARACTER*(60)      FOURIER_WRITE_FILENAME
      CHARACTER*(60)      RESULTS_WRITE_FILENAME

C  Error file and error initialization flag

      CHARACTER*(60)      LIDORT_ERROR_FILENAME
      LOGICAL             LIDORT_ERROR_INIT

C  Finite differencing variables
C  -----------------------------

C  debug only

      LOGICAL          DO_FDTEST
      DOUBLE PRECISION FDEPSILON

C  B. User/File-read inputs
C  ========================

C  (a) stream/layer/moment (INTEGER input)
C      ----------------------------------

C  Number of discrete ordinate streams

      INTEGER          NSTREAMS

C  number of computational layers

      INTEGER          NLAYERS

C  Number of fine layers subdividing all computational layers
C    ( Only required for the outgoing spherical correction algorithm)

      INTEGER          NFINELAYERS

C  number of Legendre phase function expansion moments

      INTEGER          NMOMENTS_INPUT

C  (b) Flux/accuracy
C      -------------

C  Flux factor ( should be 1 or pi ). Same for all beams.

      DOUBLE PRECISION FLUX_FACTOR

C  accuracy for convergence of Fourier series

      DOUBLE PRECISION LIDORT_ACCURACY

C  Zenith tolerance (nearness of output zenith cosine to 1.0 )

      DOUBLE PRECISION ZENITH_TOLERANCE

C  (c)  Solar beam input
C       ----------------

C  number of solar beams to be processed

      INTEGER          NBEAMS

C  TOA solar zenith angles

      DOUBLE PRECISION BEAM_SZAS ( MAXBEAMS )

C  Local input solar zenith angles by levels
C  ( Only required for refractive geometry attenuation of the solar beam)
C  These will be set internally if the refraction flag is set.

      DOUBLE PRECISION SZA_LOCAL_INPUT ( 0:MAXLAYERS, MAXBEAMS )

C  (d)  Pseudo-spherical inputs
C       -----------------------

C  Earth radius (in km) for Chapman function calculation of TAUTHICK_INPUT

      DOUBLE PRECISION EARTH_RADIUS

C  Refractive index parameter
C  ( Only required for refractive geometry attenuation of the solar beam)

      DOUBLE PRECISION RFINDEX_PARAMETER

C  (e) User defined input
C      ------------------

C  Surface height [km] at which geometry is specified.
C    Introduced by R. Spurr, RT SOLUTIONS INC., 06 August 2007

C    This is only required when the outgoing sphericity correction is
C    in operation. Otherwise, the regular pseudo-spherical correction
C    (wiht or without an exact single-scatter correction) uses the same
C    set of angles all the up the nadir from the bottom of atmosphere.

C     This height is normally set equal to the height at the lowest
C     level of the atmosphere: GEOMETRY_SPECHEIGHT = HEIGHT_GRID(NLAYERS)
C     In this case, no adjustment to the geometrical inputs is needed
C     for the outgoing sphericity correction.

C     If there is a situation GEOMETRY_SPECHEIGHT < HEIGHT_GRID(NLAYERS),
C     then an adjustment to the geometrical inputs is needed for the
C     outgoing sphericity correction. This adjustment is internal and
C     the model output will still be given at the geometrical angles
C     as specified by the user, even though these angles may not be the
C     ones at which the calculations were done. This situation will occur
C     when we are given a BOA geometry but we want to make a calculation
C     for a reflecting surface (such as a cloud-top) which is above the
C     BOA level. In this case, GEOMETRY_SPECHEIGHT = 0.0, and the lowest
C     height HEIGHT_GRID(NLAYERS) = cloud-top.

C     This height cannot be greater than HEIGHT_GRID(NLAYERS). If this is
C     the case, this height will be set equal to HEIGHT_GRID(NLAYERS), and
C     the calculation will go through without the adjustment. A warning
C     about this incorrect input choice will be sent to LOGFILE.

      DOUBLE PRECISION GEOMETRY_SPECHEIGHT

C  user-defined relative azimuths (mandatory for Fourier > 0)

      INTEGER          N_USER_RELAZMS
      DOUBLE PRECISION USER_RELAZMS  (MAX_USER_RELAZMS)

C  User-defined zenith angle input 

      INTEGER          N_USER_STREAMS
      DOUBLE PRECISION USER_ANGLES_INPUT  (MAX_USER_STREAMS)

C  User-defined and layer-boundary optical depths
C    (not used in Versions 1.0 and 1.1)

      INTEGER          N_OUT_USERTAUS
      DOUBLE PRECISION USER_TAUS_INPUT   (MAX_OUT_USERTAUS)
      INTEGER          LBOUND_TAUS_INPUT (MAX_OUT_USERTAUS)

C  C. Geophysocal atmosphere Inputs
C  ================================

C  atmosphere Z,P,T
C  ----------------

C  multilayer atmospheric inputs (Z,P,T)
C   (only required for the Chapman function calculations)

      DOUBLE PRECISION
     &      HEIGHT_GRID        ( 0:MAXLAYERS ),
     &      PRESSURE_GRID      ( 0:MAXLAYERS ),
     &      TEMPERATURE_GRID   ( 0:MAXLAYERS )

C  Number of fine layer gradations 
C    (only for Chapman function calculations with refractive index)

      INTEGER          FINEGRID ( MAXLAYERS )

C  optical property inputs
C  -----------------------

C  multilayer optical property (bulk) inputs

      DOUBLE PRECISION
     &      OMEGA_TOTAL_INPUT  ( MAXLAYERS ),
     &      DELTAU_VERT_INPUT  ( MAXLAYERS )

C  Phase function Legendre-polynomial expansion coefficients
C   Include all that you require for exact single scatter calculations

      DOUBLE PRECISION  PHASMOMS_TOTAL_INPUT
     &      ( 0:MAXMOMENTS_INPUT, MAXLAYERS )

C  D. Surface inputs
C  =================

C  BRDF names
C  ----------

      CHARACTER*10    BRDF_NAMES ( MAXBRDF_IDX )

C  IMPORTANT NOTE ---------------------------------------------
C   The following array "BRDF_CHECK_NAMES" of names is delared internally
C     in the code, and your entries will be checked against them!
C      CHARACTER*10 BRDF_CHECK_NAMES ( MAXBRDF_IDX )
C      DATA BRDF_CHECK_NAMES /
C     &     'Lambertian',
C     &     'Ross-thin ',
C     &     'Ross-thick',
C     &     'Li-sparse ',
C     &     'Li-dense  ',
C     &     'Hapke     ',
C     &     'Roujean   ',
C     &     'Rahman    ',  
C     &     'Cox-Munk  ',  
C     &     'Gisssoil  ',  
c     &     'Gisssnow  '/
C  -------------------------------------------------------------

C  Surface variables and control
C  -----------------------------

C  Lambertian Surface control

      LOGICAL          DO_LAMBERTIAN_SURFACE
      LOGICAL          LAMBERTIAN_KERNEL_FLAG ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION LAMBERTIAN_ALBEDO

C   Number and index-list of bidirectional functions

      INTEGER          N_BRDF_KERNELS
      INTEGER          WHICH_BRDF ( MAX_BRDF_KERNELS )

C  Parameters required for Kernel families

      INTEGER          N_BRDF_PARAMETERS ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION BRDF_PARAMETERS 
     &                 ( MAX_BRDF_KERNELS, MAX_BRDF_PARAMETERS )

C  Input kernel amplitude factors

      DOUBLE PRECISION BRDF_FACTORS ( MAX_BRDF_KERNELS )

C  Number of azimuth quadrature streams for BRDF

      INTEGER          NSTREAMS_BRDF

C  Shadowing effect flag (only for Cox-Munk type kernels)

      LOGICAL          DO_SHADOW_EFFECT

C  Multiple reflectance correction for direct beam flag
C              (only for GLITTER type kernels)

      LOGICAL          DO_GLITTER_DBMS

C  5. THERMAL INPUTS and CONTROLS
C  ==============================

C  Enabled in Version 3.1

C  Thermal blackbody emission in the atmosphere
C  --------------------------------------------

C  input Planck function at layer boundaries in Watts/Sq m.
C    LIDORT uses 4.pi.SURFBB = FP_SURFBB

      LOGICAL          DO_THERMAL_EMISSION
      INTEGER          N_THERMAL_COEFFS
      DOUBLE PRECISION THERMAL_BB_INPUT (0:MAXLAYERS)

C  surface blackbody emission
C  --------------------------

C  input surface Planck function SURFBB in Watts/Sq m.
C    LIDORT uses 4.pi.SURFBB = FSURF

      LOGICAL          DO_SURFACE_EMISSION
      DOUBLE PRECISION SURFBB

C  Transmittance only for thermal mode.
C    Flag introduced July 31, 2007

      LOGICAL          DO_THERMAL_TRANSONLY

C  6. commons
C  ==========

C   D = double precision variables
C   I = integer variables
C   L = logical variables
C   C = Character strings

      COMMON / LIDORT_CONTROL_INPUTS /         
     L       DO_RAYLEIGH_ONLY,        DO_ISOTROPIC_ONLY,
     L       DO_PLANE_PARALLEL,       DO_REFRACTIVE_GEOMETRY,
     L       DO_SOLAR_SOURCES,        DO_CHAPMAN_FUNCTION,
     L       DO_CLASSICAL_SOLUTION,   DO_DOUBLE_CONVTEST,
     L       DO_FULLRAD_MODE,         DO_DBCORRECTION,
     L       DO_SSCORR_NADIR,         DO_SSCORR_OUTGOING,
     L       DO_SSCORR_TRUNCATION,    DO_SSFULL,
     L       DO_SOLUTION_SAVING,      DO_BVP_TELESCOPING,
     L       DO_ALL_FOURIER,          DO_NO_AZIMUTH, 
     L       DO_DELTAM_SCALING,       DO_QUAD_OUTPUT,
     L       DO_ADDITIONAL_MVOUT,     DO_MVOUT_ONLY,
     L       DO_USER_STREAMS,         DO_USER_TAUS, DO_LBOUND_TAUS,
     L       DO_UPWELLING,            DO_DNWELLING,
     L       DO_WRITE_SCENARIO,       DO_WRITE_RESULTS,
     L       DO_WRITE_INPUT,          DO_WRITE_FOURIER,
     L       DO_DEBUG_WRITE,          DO_INFO_WRITE,
     L       DO_FULL_QUADRATURE

      COMMON / LIDORT_FILEREAD_INPUTS /
     D       FLUX_FACTOR,       LIDORT_ACCURACY,
     D       GEOMETRY_SPECHEIGHT,
     D       ZENITH_TOLERANCE,  RFINDEX_PARAMETER,
     D       BEAM_SZAS, SZA_LOCAL_INPUT, EARTH_RADIUS,
     D       USER_ANGLES_INPUT, USER_RELAZMS, USER_TAUS_INPUT,
     I       N_USER_STREAMS, N_USER_RELAZMS, N_OUT_USERTAUS,
     I       NBEAMS, NSTREAMS, NLAYERS, NFINELAYERS, NMOMENTS_INPUT,
     I       LBOUND_TAUS_INPUT

      COMMON / LIDORT_GEOPHYS_INPUTS /
     D     PHASMOMS_TOTAL_INPUT,
     D     OMEGA_TOTAL_INPUT,
     D     DELTAU_VERT_INPUT,
     D     HEIGHT_GRID, PRESSURE_GRID, TEMPERATURE_GRID,
     I     FINEGRID

      COMMON / LIDORT_SURFACE_INPUTS / 
     D     BRDF_PARAMETERS, BRDF_FACTORS,
     D     LAMBERTIAN_ALBEDO,
     I     N_BRDF_KERNELS, N_BRDF_PARAMETERS,
     I     WHICH_BRDF, NSTREAMS_BRDF,
     L     LAMBERTIAN_KERNEL_FLAG, DO_LAMBERTIAN_SURFACE,
     L     DO_SHADOW_EFFECT, DO_GLITTER_DBMS,
     C     BRDF_NAMES

      COMMON / LIDORT_THERMAL_INPUTS / 
     D     SURFBB, THERMAL_BB_INPUT,
     I     N_THERMAL_COEFFS,
     L     DO_THERMAL_EMISSION,
     L     DO_SURFACE_EMISSION,
     L     DO_THERMAL_TRANSONLY

C  These next two are really debug only

      COMMON / LIDORT_CONTROL_FILENAMES /
     L       LIDORT_ERROR_INIT,
     C       LIDORT_ERROR_FILENAME, 
     C       INPUT_WRITE_FILENAME,   SCENARIO_WRITE_FILENAME,
     C       RESULTS_WRITE_FILENAME, FOURIER_WRITE_FILENAME

      COMMON / LIDORT_FDEPS_INPUTS /
     D       FDEPSILON,
     L       DO_FDTEST

C  save statements

      SAVE   / LIDORT_CONTROL_INPUTS    /
      SAVE   / LIDORT_FILEREAD_INPUTS   /
      SAVE   / LIDORT_GEOPHYS_INPUTS    /
      SAVE   / LIDORT_SURFACE_INPUTS    /
      SAVE   / LIDORT_THERMAL_INPUTS    /

      SAVE   / LIDORT_CONTROL_FILENAMES /
      SAVE   / LIDORT_FDEPS_INPUTS      /
