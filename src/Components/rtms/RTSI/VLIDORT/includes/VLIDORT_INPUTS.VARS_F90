! ===============================================================
! =                                                             =
! =                    THE VECTOR LIDORT MODEL                  =
! =                                                             =
! =  (Vector LInearized Discrete Ordinate Radiative Transfer)   =
! =   -      --         -        -        -         -           =
! =                                                             =
! ===============================================================

! ===============================================================
! =                                                             =
! =  Author :      Robert. J. D. Spurr                          =
! =                                                             =
! =  Address :      RT Solutions, inc.                          =
! =                 9 Channing Street                           =
! =                 Cambridge, MA 02138, USA                    =
! =                 Tel: (617) 492 1183                         =
! =                                                             =
! =  Email :      rtsolutions@verizon.net                       =
! =                                                             =
! =  Versions     :   2.0, 2.2, 2.3, 2.4, 2.4R, 2.4RT           =
! =  Release Date :   December 2005  (2.0)                      =
! =  Release Date :   March 2007     (2.2)                      =
! =  Release Date :   October 2007   (2.3)                      =
! =  Release Date :   December 2008  (2.4)                      =
! =  Release Date :   April/May 2009 (2.4R)                     =
! =  Release Date :   July 2009      (2.4RT)                    =
! =                                                             =
! =       NEW: TOTAL COLUMN JACOBIANS         (2.4)             =
! =       NEW: BPDF Land-surface KERNELS      (2.4R)            =
! =       NEW: Thermal Emission Treatment     (2.4RT)           =
! =                                                             =
! ===============================================================

!    =====================================================
!    =                                                   =
!    =   This Version of VLIDORT comes with a GNU-style  =
!    =   license. Please read the license carefully.     =
!    =                                                   =
!    =====================================================

!  File name : VLIDORT_INPUTS.VARS
!  Purpose   : include file of input variables

!  A. CONTROL FLAGS
!  ================

!  Mode of operation
!  -----------------

!  Full Stokes vector calculation

      LOGICAL             DO_FULLRAD_MODE

!  single scatter and direct beam corrections

      LOGICAL             DO_SSCORR_NADIR
      LOGICAL             DO_SSCORR_OUTGOING
      LOGICAL             DO_DBCORRECTION

!  Flag for performing a complete separate delta-M truncation on the
!  single scatter corrrection  calculations

      LOGICAL             DO_SSCORR_TRUNCATION

!  Flag for Full-up single scatter calculation

      LOGICAL             DO_SSFULL

!  double convergence test flag

      LOGICAL             DO_DOUBLE_CONVTEST

!  Solar beam control
!  ------------------

!  Basic top-level control. New for Version 2.4RT

      LOGICAL             DO_SOLAR_SOURCES

!  Beam particular solution pseudo-spherical options

      LOGICAL             DO_PLANE_PARALLEL
      LOGICAL             DO_REFRACTIVE_GEOMETRY
      LOGICAL             DO_CHAPMAN_FUNCTION

!  scatterers and phase function control
!  -------------------------------------

      LOGICAL             DO_RAYLEIGH_ONLY

!  Performance control
!  -------------------

      LOGICAL             DO_DELTAM_SCALING

!  2 new flags in Version 2.0

      LOGICAL             DO_SOLUTION_SAVING
      LOGICAL             DO_BVP_TELESCOPING

!  User-defined output control
!  ---------------------------

!  directional control

      LOGICAL             DO_UPWELLING
      LOGICAL             DO_DNWELLING

!  stream angle and optical depth

      LOGICAL             DO_QUAD_OUTPUT
      LOGICAL             DO_USER_VZANGLES

!  mean value control

      LOGICAL             DO_ADDITIONAL_MVOUT
      LOGICAL             DO_MVOUT_ONLY

!  Write control
!  -------------

      LOGICAL             DO_DEBUG_WRITE

      LOGICAL             DO_WRITE_INPUT
      LOGICAL             DO_WRITE_SCENARIO
      LOGICAL             DO_WRITE_FOURIER
      LOGICAL             DO_WRITE_RESULTS

!  filenames for output

      CHARACTER*(60)      INPUT_WRITE_FILENAME
      CHARACTER*(60)      SCENARIO_WRITE_FILENAME
      CHARACTER*(60)      FOURIER_WRITE_FILENAME
      CHARACTER*(60)      RESULTS_WRITE_FILENAME

!  Error file and error initialization flag

      CHARACTER*(60)      VLIDORT_ERROR_FILENAME
      LOGICAL             VLIDORT_ERROR_INIT

!  Finite differencing variables
!  -----------------------------

!  debug only

      LOGICAL          DO_FDTEST
      DOUBLE PRECISION FDEPSILON

!  B. User/File-read inputs
!  ========================

!  (a) Stokes/stream/layer/moment (INTEGER input)
!      ------------------------------------------

!  number of Stokes vector components

      INTEGER          NSTOKES

!  Number of discrete ordinate streams

      INTEGER          NSTREAMS

!  number of computational layers

      INTEGER          NLAYERS

!  Number of fine layers subdividing all computational layers
!    ( Only required for the outgoing spherical correction algorithm)

      INTEGER          NFINELAYERS

!  number of expansion coefficient moments

      INTEGER          NGREEK_MOMENTS_INPUT

!  (b) accuracy
!      --------

!  accuracy for convergence of Fourier series

      DOUBLE PRECISION VLIDORT_ACCURACY

!  (c)  Solar beam input
!       ----------------

!  Flux factor. Same for all beams.

      DOUBLE PRECISION FLUX_FACTOR

!  number of solar beams to be processed

      INTEGER          N_SZANGLES

!  TOA solar zenith angles

      DOUBLE PRECISION SZANGLES ( MAX_SZANGLES )

!  Local input solar zenith angles by levels
!  ( Only required for refractive geometry attenuation of the solar beam)
!  These will be set internally if the refraction flag is set.

      DOUBLE PRECISION SZA_LOCAL_INPUT ( 0:MAXLAYERS, MAX_SZANGLES )

!  (d)  Pseudo-spherical inputs
!       -----------------------

!  Earth radius (in km) for Chapman function calculation of TAUTHICK_INPUT

      DOUBLE PRECISION EARTH_RADIUS

!  Refractive index parameter
!  ( Only required for refractive geometry attenuation of the solar beam)

      DOUBLE PRECISION RFINDEX_PARAMETER

!  (e) User defined input
!      ------------------

!  Surface height [km] at which geometry is specified.
!    Introduced by R. Spurr, RT SOLUTIONS INC., 06 August 2007

!    This is only required when the outgoing sphericity correction is
!    in operation. Otherwise, the regular pseudo-spherical correction
!    (wiht or without an exact single-scatter correction) uses the same
!    set of angles all the up the nadir from the bottom of atmosphere.

!     This height is normally set equal to the height at the lowest
!     level of the atmosphere: GEOMETRY_SPECHEIGHT = HEIGHT_GRID(NLAYERS)
!     In this case, no adjustment to the geometrical inputs is needed
!     for the outgoing sphericity correction.

!     If there is a situation GEOMETRY_SPECHEIGHT < HEIGHT_GRID(NLAYERS),
!     then an adjustment to the geometrical inputs is needed for the
!     outgoing sphericity correction. This adjustment is internal and
!     the model output will still be given at the geometrical angles
!     as specified by the user, even though these angles may not be the
!     ones at which the calculations were done. This situation will occur
!     when we are given a BOA geometry but we want to make a calculation
!     for a reflecting surface (such as a cloud-top) which is above the
!     BOA level. In this case, GEOMETRY_SPECHEIGHT = 0.0, and the lowest
!     height HEIGHT_GRID(NLAYERS) = cloud-top.

!     This height cannot be greater than HEIGHT_GRID(NLAYERS). If this is
!     the case, this height will be set equal to HEIGHT_GRID(NLAYERS), and
!     the calculation will go through without the adjustment. A warning
!     about this incorrect input choice will be sent to LOGFILE.

      DOUBLE PRECISION GEOMETRY_SPECHEIGHT
      
!  user-defined relative azimuths (mandatory for Fourier > 0)

      INTEGER          N_USER_RELAZMS
      DOUBLE PRECISION USER_RELAZMS  (MAX_USER_RELAZMS)

!  User-defined zenith angle input 

      INTEGER          N_USER_VZANGLES
      DOUBLE PRECISION USER_VZANGLES  (MAX_USER_VZANGLES)

!  User-defined output levels

      INTEGER          N_USER_LEVELS
      DOUBLE PRECISION USER_LEVELS ( MAX_USER_LEVELS )

!  C. Geophysical Atmosphere Inputs
!  ================================

!  atmosphere Z,P,T
!  ----------------

!  multilayer atmospheri! inputs (Z,P,T)
!   (only required for the Chapman function calculations)

      DOUBLE PRECISION &
           HEIGHT_GRID        ( 0:MAXLAYERS ),&
           PRESSURE_GRID      ( 0:MAXLAYERS ),&
           TEMPERATURE_GRID   ( 0:MAXLAYERS )

!  Number of fine layer gradations 
!    (only for Chapman function calculations with refractive index)

      INTEGER            FINEGRID ( MAXLAYERS )

!  optical property inputs
!  -----------------------

!  multilayer optical property (bulk) inputs

      DOUBLE PRECISION &
           OMEGA_TOTAL_INPUT  ( MAXLAYERS ),&
           DELTAU_VERT_INPUT  ( MAXLAYERS )

!  Phase matrix generalized-spherical expansion coefficients
!   Include all that you require for exact single scatter calculations

      DOUBLE PRECISION  GREEKMAT_TOTAL_INPUT &
           ( 0:MAXMOMENTS_INPUT, MAXLAYERS, MAXSTOKES_SQ )

!  D. Surface inputs
!  =================

!  BRDF names
!  ----------

      CHARACTER*10    BRDF_NAMES ( MAXBRDF_IDX )

!  IMPORTANT NOTE ---------------------------------------------
!   The following array "BRDF_CHECK_NAMES" of names is delared internally
!     in the code, and your entries will be checked against them!
!      CHARACTER*10 BRDF_CHECK_NAMES ( MAXBRDF_IDX )
!      DATA BRDF_CHECK_NAMES /
!     &     'Lambertian',
!     &     'Ross-thin ',
!     &     'Ross-thick',
!     &     'Li-sparse ',
!     &     'Li-dense  ',
!     &     'Hapke     ',
!     &     'Roujean   ',
!     &     'Rahman    ',  
!     &     'Cox-Munk  ',  
!     &     'GissCoxMnk',  
!     &     'RondHerman',  
!     &     'Breon     ',  
!     &     'BPDF08Veg ',  
!     &     'BPDF08Soil',
!     &     'BPDF2009  '/
!  -------------------------------------------------------------
!    THIS LIST WAS REVISED On 11 May 2009, by R. SPURR
!  -------------------------------------------------------------

!  Surface variables and control (no Matrix stuff yet)
!  -----------------------------

!  Lambertian Surface control

      LOGICAL          DO_LAMBERTIAN_SURFACE
      LOGICAL          LAMBERTIAN_KERNEL_FLAG ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION LAMBERTIAN_ALBEDO

!   Number and index-list of bidirectional functions

      INTEGER          N_BRDF_KERNELS
      INTEGER          WHICH_BRDF ( MAX_BRDF_KERNELS )

!  Parameters required for Kernel families

      INTEGER          N_BRDF_PARAMETERS ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION BRDF_PARAMETERS &
                      ( MAX_BRDF_KERNELS, MAX_BRDF_PARAMETERS )

!  Input kernel amplitude factors

      DOUBLE PRECISION BRDF_FACTORS ( MAX_BRDF_KERNELS )

!  Number of azimuth quadrature streams for BRDF

      INTEGER          NSTREAMS_BRDF

!  Number of independent matrix entries in the BRDF

      INTEGER          N_BRDF_STOKESSQ

!  Shadowing effect flag (only for Cox-Munk type kernels)

      LOGICAL          DO_SHADOW_EFFECT

!  Multiple reflectance correction for direct beam flag
!              (only for Cox-Munk type kernels)

      LOGICAL          DO_COXMUNK_DBMS

!  E. THERMAL INPUTS and CONTROLS
!  ==============================

!  Enabled in Version 2.4RT

!  Thermal blackbody emission in the atmosphere
!  --------------------------------------------

!   Overall flag for atmospheric thermal emission

      LOGICAL          DO_THERMAL_EMISSION

!    Default: N_THERMAL_COEFFS = 2. 
!         "Piecewise linear with Optical depth in each layer"

      INTEGER          N_THERMAL_COEFFS

!  input Planck function at layer boundaries in Watts/Sq m.

      DOUBLE PRECISION THERMAL_BB_INPUT (0:MAXLAYERS)

!  surface blackbody emission
!  --------------------------

!  input surface Planck function SURFBB in Watts/Sq m.

      LOGICAL          DO_SURFACE_EMISSION
      DOUBLE PRECISION SURFBB

!  Transmittance-only for thermal mode (Fast calculation)
!  -----------------------------------

!    Flag introduced July 31, 2007. No scattering in the RT

      LOGICAL          DO_THERMAL_TRANSONLY

!  F. Specialist Options
!  =====================

!  Flags

      LOGICAL          DO_SPECIALIST_OPTION_1
      LOGICAL          DO_SPECIALIST_OPTION_2
      LOGICAL          DO_SPECIALIST_OPTION_3

!  Number of upper layers with no multiple scattering
!    Only for use with specialist option 2

      INTEGER          NLAYERS_NOMS

!  Number of layers before source cutoff
!    Only for use with Specialist option 3

      INTEGER          NLAYERS_CUTOFF

!  G. commons
!  ==========

!  Key:
!   D = double precision variables
!   I = integer variables
!   L = logical variables
!   C = Character strings

      COMMON / VLIDORT_CONTROL_INPUTS /  &      
            DO_FULLRAD_MODE,         DO_SOLAR_SOURCES,        & ! L
            DO_RAYLEIGH_ONLY,        DO_SSCORR_OUTGOING,      & ! L
            DO_PLANE_PARALLEL,       DO_REFRACTIVE_GEOMETRY,  & ! L
            DO_CHAPMAN_FUNCTION,     DO_DOUBLE_CONVTEST,      & ! L
            DO_SSCORR_NADIR,         DO_DBCORRECTION,         & ! L
            DO_SSCORR_TRUNCATION,    DO_SSFULL,               & ! L
            DO_SOLUTION_SAVING,      DO_BVP_TELESCOPING,      & ! L
            DO_DELTAM_SCALING,       DO_QUAD_OUTPUT,          & ! L
            DO_ADDITIONAL_MVOUT,     DO_MVOUT_ONLY,           & ! L
            DO_UPWELLING,            DO_DNWELLING,            & ! L
            DO_WRITE_SCENARIO,       DO_WRITE_RESULTS,        & ! L
            DO_WRITE_INPUT,          DO_WRITE_FOURIER,        & ! L
            DO_DEBUG_WRITE,          DO_USER_VZANGLES           ! L

      COMMON / VLIDORT_MODEL_INPUTS / &
            VLIDORT_ACCURACY,                               & ! D
            FLUX_FACTOR,                                    & ! D
            RFINDEX_PARAMETER,                              & ! D
            GEOMETRY_SPECHEIGHT,                            & ! D
            SZANGLES, SZA_LOCAL_INPUT, EARTH_RADIUS,        & ! D
            USER_VZANGLES, USER_RELAZMS, USER_LEVELS,       & ! D
            N_USER_VZANGLES, N_USER_RELAZMS, N_USER_LEVELS, & ! I
            N_SZANGLES, NSTOKES, NSTREAMS, NLAYERS,         & ! I
            NFINELAYERS, NGREEK_MOMENTS_INPUT                 ! I

      COMMON / VLIDORT_GEOPHYS_INPUTS / &                  
          GREEKMAT_TOTAL_INPUT,                           & ! D
          OMEGA_TOTAL_INPUT,                              & ! D
          DELTAU_VERT_INPUT,                              & ! D
          HEIGHT_GRID, PRESSURE_GRID, TEMPERATURE_GRID,   & ! D
          FINEGRID                                          ! I  

      COMMON / VLIDORT_SURFACE_INPUTS / &
          BRDF_PARAMETERS, BRDF_FACTORS, LAMBERTIAN_ALBEDO, & ! D
          N_BRDF_KERNELS, N_BRDF_PARAMETERS,                & ! I
          WHICH_BRDF, NSTREAMS_BRDF, N_BRDF_STOKESSQ,       & ! I
          LAMBERTIAN_KERNEL_FLAG, DO_LAMBERTIAN_SURFACE,    & ! L
          DO_SHADOW_EFFECT, DO_COXMUNK_DBMS,                & ! L
          BRDF_NAMES                                          ! C

      COMMON / VLIDORT_THERMAL_INPUTS / &
          SURFBB, THERMAL_BB_INPUT, & ! D
          N_THERMAL_COEFFS,         & ! I
          DO_THERMAL_EMISSION,      & ! L
          DO_SURFACE_EMISSION,      & ! L
          DO_THERMAL_TRANSONLY        ! L

      COMMON / VLIDORT_SPECIALIST_INPUTS /  &
           NLAYERS_NOMS, NLAYERS_CUTOFF,    &
           DO_SPECIALIST_OPTION_1,          &
           DO_SPECIALIST_OPTION_2,          &
           DO_SPECIALIST_OPTION_3

!  These next two are really debug only

      COMMON / VLIDORT_CONTROL_FILENAMES /                  &
            VLIDORT_ERROR_INIT,                             & ! L     
            VLIDORT_ERROR_FILENAME,                         & ! C
            INPUT_WRITE_FILENAME,   SCENARIO_WRITE_FILENAME,& ! C
            RESULTS_WRITE_FILENAME, FOURIER_WRITE_FILENAME    ! C

      COMMON / VLIDORT_FDEPS_INPUTS /  &
            FDEPSILON,                 & ! D
            DO_FDTEST                    ! L

!  save statements

      SAVE   / VLIDORT_CONTROL_INPUTS    /
      SAVE   / VLIDORT_MODEL_INPUTS      /
      SAVE   / VLIDORT_GEOPHYS_INPUTS    /
      SAVE   / VLIDORT_SURFACE_INPUTS    /
      SAVE   / VLIDORT_THERMAL_INPUTS    /
      SAVE   / VLIDORT_SPECIALIST_INPUTS /

      SAVE   / VLIDORT_CONTROL_FILENAMES /
      SAVE   / VLIDORT_FDEPS_INPUTS      /

!  end of file.
