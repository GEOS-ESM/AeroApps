C ###############################################################
C #                                                             #
C #                    THE VECTOR LIDORT MODEL                  #
C #                                                             #
C #  (Vector LInearized Discrete Ordinate Radiative Transfer)   #
C #   -      --         -        -        -         -           #
C #                                                             #
C ###############################################################

C ###############################################################
C #                                                             #
C #  Author :      Robert. J. D. Spurr                          #
C #                                                             #
C #  Address :      RT Solutions, inc.                          #
C #            9 Channing Street                                #
C #             Cambridge, MA 02138, USA                        #
C #            Tel: (617) 492 1183                              #
C #                                                             #
C #  Email :      rtsolutions@verizon.net                       #
C #                                                             #
C #  Versions     :   2.0, 2.2, 2.3, 2.4, 2.4R, 2.4RT           #
C #  Release Date :   December 2005  (2.0)                      #
C #  Release Date :   March 2007     (2.2)                      #
C #  Release Date :   October 2007   (2.3)                      #
C #  Release Date :   December 2008  (2.4)                      #
C #  Release Date :   April/May 2009 (2.4R)                     #
C #  Release Date :   July 2009      (2.4RT)                    #
C #                                                             #
C #       NEW: TOTAL COLUMN JACOBIANS         (2.4)             #
C #       NEW: BPDF Land-surface KERNELS      (2.4R)            #
C #       NEW: Thermal Emission Treatment     (2.4RT)           #
C #                                                             #
C ###############################################################

C    #####################################################
C    #                                                   #
C    #   This Version of VLIDORT comes with a GNU-style  #
C    #   license. Please read the license carefully.     #
C    #                                                   #
C    #####################################################

C  VLIDORT.PARS should be included first.

C  local matrices for eigenvalue computation

      DOUBLE PRECISION
     &   SAB(MAXSTREAMS,MAXSTREAMS,MAXSTOKES,MAXSTOKES,MAXLAYERS),
     &   DAB(MAXSTREAMS,MAXSTREAMS,MAXSTOKES,MAXSTOKES,MAXLAYERS),
     &   EIGENMAT_SAVE(MAXEVALUES,MAXEVALUES,MAXLAYERS)

C  DGEEV output. New code from earlier versions

      DOUBLE PRECISION REAL_KSQ(MAXSTRMSTKS),IMAG_KSQ(MAXSTRMSTKS)
      DOUBLE PRECISION LEFT_EVEC(MAXSTRMSTKS,MAXSTRMSTKS)
      DOUBLE PRECISION RITE_EVEC(MAXSTRMSTKS,MAXSTRMSTKS)

C  eigenvalue bookkeeping

      LOGICAL             EIGENDEGEN(MAXSTRMSTKS,MAXLAYERS)
      INTEGER             EIGENMASK_R(MAXEVALUES)
      INTEGER             EIGENMASK_C(MAXEVALUES)
      INTEGER             K_REAL(MAXLAYERS)
      INTEGER             K_COMPLEX(MAXLAYERS)

C  Eigensolutions
C  - - -  - - - -

C  Eigenvalues

      DOUBLE PRECISION KEIGEN(MAXEVALUES,MAXLAYERS)
      DOUBLE PRECISION KEIGEN_CSQ(MAXEVALUES)

C  sum and difference vectors for forward solution

      DOUBLE PRECISION
     &      FWD_SUMVEC(MAXSTREAMS,MAXSTOKES,MAXEVALUES),
     &      FWD_DIFVEC(MAXSTREAMS,MAXSTOKES,MAXEVALUES)

c-----------------------------------------------------------------
C  Forward solutions. Removed 26 March 2007.
c      DOUBLE PRECISION
c     &     FWD_XPOS(MAXSTREAMS_2,MAXSTOKES,MAXEVALUES,MAXLAYERS),
c     &     FWD_XNEG(MAXSTREAMS_2,MAXSTOKES,MAXEVALUES,MAXLAYERS)
c-----------------------------------------------------------------

C  solution arrays

      DOUBLE PRECISION
     &     SOLA_XPOS(MAXSTREAMS_2,MAXSTOKES,MAXEVALUES,MAXLAYERS)
      DOUBLE PRECISION
     &     SOLB_XNEG(MAXSTREAMS_2,MAXSTOKES,MAXEVALUES,MAXLAYERS)

C  Classical solution
C  ******************

C  Classical beam solution matrices and vectors
C     (saved because required again for linearization)

      DOUBLE PRECISION QSUMVEC_SAVE(MAXSTREAMS,MAXSTOKES)
      DOUBLE PRECISION QDIFVEC_SAVE(MAXSTREAMS,MAXSTOKES)
      DOUBLE PRECISION QVEC_SAVE(MAXSTRMSTKS)
      DOUBLE PRECISION QDIF_SAVE(MAXSTRMSTKS)
      DOUBLE PRECISION QMAT_SAVE(MAXSTRMSTKS,MAXSTRMSTKS)
      INTEGER          QPIVOT(MAXSTRMSTKS)

C  Beam solution independent of optical depth (classical solution)

      DOUBLE PRECISION HELP_QFUNC(MAXLAYERS,0:MAXMOMENTS,MAXSTOKES)
C      DOUBLE PRECISION WVEC(MAXSTREAMS_2,MAXSTOKES,MAXLAYERS)
      DOUBLE PRECISION BVEC(MAXSTREAMS_2,MAXSTOKES,MAXLAYERS)

C  Particular beam solutions at layer boundaries

      DOUBLE PRECISION
     &        WUPPER(MAXSTREAMS_2,MAXSTOKES,MAXLAYERS),
     &        WLOWER(MAXSTREAMS_2,MAXSTOKES,MAXLAYERS)

C  Boundary value problem
C  ----------------------

C  Matrix, Band-matrix and column for solving BCs

      DOUBLE PRECISION COL2(MAXTOTAL,MAXBEAMS)
      DOUBLE PRECISION BANDMAT2(MAXBANDTOTAL,MAXTOTAL)

      INTEGER          IPIVOT(MAXTOTAL)

C  Compression indices (replaces BMAT_ROWMASK which is now a function)

      INTEGER  NMIN(MAXTOTAL), NMAX(MAXTOTAL), KALL

C  sqaure matrix for the single layer case

      DOUBLE PRECISION SCOL2   (MAXSTRMSTKS_2,MAXBEAMS)
      DOUBLE PRECISION SMAT2   (MAXSTRMSTKS_2,MAXSTRMSTKS_2)
      INTEGER          SIPIVOT (MAXSTRMSTKS_2)

C  Solution constants of integration, and related quantities

      DOUBLE PRECISION LCON  (MAXSTRMSTKS,MAXLAYERS)
      DOUBLE PRECISION MCON  (MAXSTRMSTKS,MAXLAYERS)

C  Reduced or Telescoped Boundary value problem
C  --------------------------------------------

C  initialization flag

      LOGICAL          DO_BVTEL_INITIAL

C  actual dimensions

      INTEGER          N_BVTELMATRIX_SIZE
      INTEGER          N_BVTELMATRIX_SUPDIAG
      INTEGER          N_BVTELMATRIX_SUBDIAG

C  Active layer masks

      INTEGER          NLAYERS_TEL
      INTEGER          ACTIVE_LAYERS(MAXLAYERS)

C  Matrix, Band-matrix and column for solving BCs

      DOUBLE PRECISION COLTEL2(MAXTOTAL,MAXBEAMS)
      DOUBLE PRECISION BANDTELMAT2(MAXBANDTOTAL,MAXTOTAL)
      INTEGER          IPIVOTTEL(MAXTOTAL)
      INTEGER          NMINTEL(MAXTOTAL), NMAXTEL(MAXTOTAL), KALLTEL

C  User-defined solutions
C  ======================

C  Saved help variables

      DOUBLE PRECISION  HELPSTOKES
     &          (0:MAXMOMENTS,MAXEVALUES,MAXSTOKES)

      DOUBLE PRECISION  HELPSTOKES_BEAM
     &          (0:MAXMOMENTS,MAXSTOKES)

      DOUBLE PRECISION  GAUX_R(0:MAXMOMENTS,MAXSTOKES)
      DOUBLE PRECISION  GAUX_CR(0:MAXMOMENTS,MAXSTOKES)
      DOUBLE PRECISION  GAUX_CI(0:MAXMOMENTS,MAXSTOKES)

C  Solutions defined at user-defined stream angles

      DOUBLE PRECISION UHOM_DNDN
     U    ( MAX_USER_STREAMS,MAXSTOKES,MAXEVALUES,MAXLAYERS)
      DOUBLE PRECISION UHOM_DNUP
     U    ( MAX_USER_STREAMS,MAXSTOKES,MAXEVALUES,MAXLAYERS)
      DOUBLE PRECISION UHOM_UPDN
     U    ( MAX_USER_STREAMS,MAXSTOKES,MAXEVALUES,MAXLAYERS)
      DOUBLE PRECISION UHOM_UPUP
     U    ( MAX_USER_STREAMS,MAXSTOKES,MAXEVALUES,MAXLAYERS)

C  Particular beam solutions at user-defined stream angles

      DOUBLE PRECISION
     U        UPAR_DN_1(MAX_USER_STREAMS,MAXSTOKES,MAXLAYERS),
     U        UPAR_DN_2(MAX_USER_STREAMS,MAXSTOKES,MAXLAYERS)
      DOUBLE PRECISION
     U        UPAR_UP_1(MAX_USER_STREAMS,MAXSTOKES,MAXLAYERS),
     U        UPAR_UP_2(MAX_USER_STREAMS,MAXSTOKES,MAXLAYERS)

C  Cumulative source terms

      DOUBLE PRECISION
     U    CUMSOURCE_UP(MAX_USER_STREAMS,MAXSTOKES,0:MAXLAYERS),
     U    CUMSOURCE_DN(MAX_USER_STREAMS,MAXSTOKES,0:MAXLAYERS)

C  Commons
C  =======

C  ( C = complex variables, R = Real variables )

C  Components of the Discrete Ordinate solution

      COMMON / EIGENSTUFF /
     R      SAB, DAB, EIGENMAT_SAVE,
     D      LEFT_EVEC, RITE_EVEC, REAL_KSQ, IMAG_KSQ,
     I      EIGENMASK_R, EIGENMASK_C,
     I      K_REAL, K_COMPLEX,
     L      EIGENDEGEN

C  homogeneous solution variables.
C     FWD_XPOS, FWD_XNEG removed 26 March 2007

      COMMON / COMPONENTS_HOMOG_SOLUTION /
     R      KEIGEN, KEIGEN_CSQ,
     R      FWD_SUMVEC, FWD_DIFVEC,
     R      SOLA_XPOS,  SOLB_XNEG

C  particular solution variables

      COMMON / COMPONENTS_PARTIC_SOLUTION /
     D      BVEC, WUPPER, WLOWER, HELP_QFUNC,
     D      QSUMVEC_SAVE, QDIFVEC_SAVE,
     D      QVEC_SAVE, QDIF_SAVE, QMAT_SAVE, QPIVOT

C  User-defined solutions

      COMMON / USER_SOLUTION_VARIABLES /
     D    UHOM_DNDN, UHOM_DNUP, UHOM_UPDN, UHOM_UPUP, 
     A    GAUX_CR, GAUX_CI, GAUX_R, HELPSTOKES,
     R    UPAR_DN_1,UPAR_DN_2,UPAR_UP_1,UPAR_UP_2,HELPSTOKES_BEAM,
     R    CUMSOURCE_UP, CUMSOURCE_DN

C  matrices used in the boundary value problem

      COMMON / BVP_STORAGE_REGULAR /
     D      BANDMAT2, COL2, SMAT2, SCOL2, LCON, MCON,
     I      IPIVOT, SIPIVOT, NMIN, NMAX, KALL

C  Arrays used in the TELESCOPED boundary value problem

      COMMON / BVP_STORAGE_TELESCOPING /
     D      BANDTELMAT2, COLTEL2,
     I      IPIVOTTEL, NMINTEL, NMAXTEL,
     I      N_BVTELMATRIX_SIZE, KALLTEL, 
     I      N_BVTELMATRIX_SUPDIAG, N_BVTELMATRIX_SUBDIAG,
     I      NLAYERS_TEL, ACTIVE_LAYERS,
     L      DO_BVTEL_INITIAL

C  save statements

      SAVE   / EIGENSTUFF /
      SAVE   / COMPONENTS_HOMOG_SOLUTION  /
      SAVE   / COMPONENTS_PARTIC_SOLUTION /
      SAVE   / USER_SOLUTION_VARIABLES /
      SAVE   / BVP_STORAGE_REGULAR       /
      SAVE   / BVP_STORAGE_TELESCOPING   /

C  End of file.
