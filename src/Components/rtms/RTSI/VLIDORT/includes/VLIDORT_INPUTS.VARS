C ###############################################################
C #                                                             #
C #                    THE VECTOR LIDORT MODEL                  #
C #                                                             #
C #  (Vector LInearized Discrete Ordinate Radiative Transfer)   #
C #   -      --         -        -        -         -           #
C #                                                             #
C ###############################################################

C ###############################################################
C #                                                             #
C #  Author :      Robert. J. D. Spurr                          #
C #                                                             #
C #  Address :      RT Solutions, inc.                          #
C #                 9 Channing Street                           #
C #                 Cambridge, MA 02138, USA                    #
C #                 Tel: (617) 492 1183                         #
C #                                                             #
C #  Email :      rtsolutions@verizon.net                       #
C #                                                             #
C #  Versions     :   2.0, 2.2, 2.3, 2.4, 2.4R, 2.4RT           #
C #  Release Date :   December 2005  (2.0)                      #
C #  Release Date :   March 2007     (2.2)                      #
C #  Release Date :   October 2007   (2.3)                      #
C #  Release Date :   December 2008  (2.4)                      #
C #  Release Date :   April/May 2009 (2.4R)                     #
C #  Release Date :   July 2009      (2.4RT)                    #
C #                                                             #
C #       NEW: TOTAL COLUMN JACOBIANS         (2.4)             #
C #       NEW: BPDF Land-surface KERNELS      (2.4R)            #
C #       NEW: Thermal Emission Treatment     (2.4RT)           #
C #                                                             #
C ###############################################################

C    #####################################################
C    #                                                   #
C    #   This Version of VLIDORT comes with a GNU-style  #
C    #   license. Please read the license carefully.     #
C    #                                                   #
C    #####################################################

C  File name : VLIDORT_INPUTS.VARS
C  Purpose   : include file of input variables

C  A. CONTROL FLAGS
C  ================

C  Mode of operation
C  -----------------

C  Full Stokes vector calculation

      LOGICAL             DO_FULLRAD_MODE

C  single scatter and direct beam corrections

      LOGICAL             DO_SSCORR_NADIR
      LOGICAL             DO_SSCORR_OUTGOING
      LOGICAL             DO_DBCORRECTION

C  Flag for performing a complete separate delta-M truncation on the
C  single scatter corrrection  calculations

      LOGICAL             DO_SSCORR_TRUNCATION

C  Flag for Full-up single scatter calculation

      LOGICAL             DO_SSFULL

C  double convergence test flag

      LOGICAL             DO_DOUBLE_CONVTEST

C  Solar beam control
C  ------------------

C  Basic top-level control. New for Version 2.4RT

      LOGICAL             DO_SOLAR_SOURCES

C  Beam particular solution pseudo-spherical options

      LOGICAL             DO_PLANE_PARALLEL
      LOGICAL             DO_REFRACTIVE_GEOMETRY
      LOGICAL             DO_CHAPMAN_FUNCTION

C  scatterers and phase function control
C  -------------------------------------

      LOGICAL             DO_RAYLEIGH_ONLY

C  Performance control
c  -------------------

      LOGICAL             DO_DELTAM_SCALING

C  2 new flags in Version 2.0

      LOGICAL             DO_SOLUTION_SAVING
      LOGICAL             DO_BVP_TELESCOPING

C  User-defined output control
C  ---------------------------

C  directional control

      LOGICAL             DO_UPWELLING
      LOGICAL             DO_DNWELLING

C  view angle and quad output (latter is debug only)

      LOGICAL             DO_QUAD_OUTPUT
      LOGICAL             DO_USER_VZANGLES

C  mean value control

      LOGICAL             DO_ADDITIONAL_MVOUT
      LOGICAL             DO_MVOUT_ONLY

C  Write control
C  -------------

      LOGICAL             DO_DEBUG_WRITE

      LOGICAL             DO_WRITE_INPUT
      LOGICAL             DO_WRITE_SCENARIO
      LOGICAL             DO_WRITE_FOURIER
      LOGICAL             DO_WRITE_RESULTS

C  filenames for output

      CHARACTER*(60)      INPUT_WRITE_FILENAME
      CHARACTER*(60)      SCENARIO_WRITE_FILENAME
      CHARACTER*(60)      FOURIER_WRITE_FILENAME
      CHARACTER*(60)      RESULTS_WRITE_FILENAME

C  Error file and error initialization flag

      CHARACTER*(60)      VLIDORT_ERROR_FILENAME
      LOGICAL             VLIDORT_ERROR_INIT

C  Finite differencing variables
C  -----------------------------

C  debug only

      LOGICAL          DO_FDTEST
      DOUBLE PRECISION FDEPSILON

C  B. User/File-read inputs
C  ========================

C  (a) Stokes/stream/layer/moment (INTEGER input)
C      ------------------------------------------

C  number of Stokes vector components

      INTEGER          NSTOKES

C  Number of discrete ordinate streams

      INTEGER          NSTREAMS

C  number of computational layers

      INTEGER          NLAYERS

C  Number of fine layers subdividing all computational layers
C    ( Only required for the outgoing spherical correction algorithm)

      INTEGER          NFINELAYERS

C  number of expansion coefficient moments

      INTEGER          NGREEK_MOMENTS_INPUT

C  (b) accuracy
C      --------

C  accuracy for convergence of Fourier series

      DOUBLE PRECISION VLIDORT_ACCURACY

C  (c)  Solar beam input
C       ----------------

C  Flux factor. Same for all beams.

      DOUBLE PRECISION FLUX_FACTOR

C  number of solar beams to be processed

      INTEGER          N_SZANGLES

C  TOA solar zenith angles

      DOUBLE PRECISION SZANGLES ( MAX_SZANGLES )

C  Local input solar zenith angles by levels
C  ( Only required for refractive geometry attenuation of the solar beam)
C  These will be set internally if the refraction flag is set.

      DOUBLE PRECISION SZA_LOCAL_INPUT ( 0:MAXLAYERS, MAX_SZANGLES )

C  (d)  Pseudo-spherical inputs
C       -----------------------

C  Earth radius (in km) for Chapman function calculation of TAUTHICK_INPUT

      DOUBLE PRECISION EARTH_RADIUS

C  Refractive index parameter
C  ( Only required for refractive geometry attenuation of the solar beam)

      DOUBLE PRECISION RFINDEX_PARAMETER

C  (e) User defined input
C      ------------------

C  Surface height [km] at which geometry is specified.
C    Introduced by R. Spurr, RT SOLUTIONS INC., 06 August 2007

C    This is only required when the outgoing sphericity correction is
C    in operation. Otherwise, the regular pseudo-spherical correction
C    (wiht or without an exact single-scatter correction) uses the same
C    set of angles all the up the nadir from the bottom of atmosphere.

C     This height is normally set equal to the height at the lowest
C     level of the atmosphere: GEOMETRY_SPECHEIGHT = HEIGHT_GRID(NLAYERS)
C     In this case, no adjustment to the geometrical inputs is needed
C     for the outgoing sphericity correction.

C     If there is a situation GEOMETRY_SPECHEIGHT < HEIGHT_GRID(NLAYERS),
C     then an adjustment to the geometrical inputs is needed for the
C     outgoing sphericity correction. This adjustment is internal and
C     the model output will still be given at the geometrical angles
C     as specified by the user, even though these angles may not be the
C     ones at which the calculations were done. This situation will occur
C     when we are given a BOA geometry but we want to make a calculation
C     for a reflecting surface (such as a cloud-top) which is above the
C     BOA level. In this case, GEOMETRY_SPECHEIGHT = 0.0, and the lowest
C     height HEIGHT_GRID(NLAYERS) = cloud-top.

C     This height cannot be greater than HEIGHT_GRID(NLAYERS). If this is
C     the case, this height will be set equal to HEIGHT_GRID(NLAYERS), and
C     the calculation will go through without the adjustment. A warning
C     about this incorrect input choice will be sent to LOGFILE.

      DOUBLE PRECISION GEOMETRY_SPECHEIGHT
      
C  user-defined relative azimuths (mandatory for Fourier > 0)

      INTEGER          N_USER_RELAZMS
      DOUBLE PRECISION USER_RELAZMS  (MAX_USER_RELAZMS)

C  User-defined zenith angle input 

      INTEGER          N_USER_VZANGLES
      DOUBLE PRECISION USER_VZANGLES  (MAX_USER_VZANGLES)

C  User-defined output levels

      INTEGER          N_USER_LEVELS
      DOUBLE PRECISION USER_LEVELS ( MAX_USER_LEVELS )

C  C. Geophysical Atmosphere Inputs
C  ================================

C  atmosphere Z,P,T
C  ----------------

C  multilayer atmospheric inputs (Z,P,T)
C   (only required for the Chapman function calculations)

      DOUBLE PRECISION
     &      HEIGHT_GRID        ( 0:MAXLAYERS ),
     &      PRESSURE_GRID      ( 0:MAXLAYERS ),
     &      TEMPERATURE_GRID   ( 0:MAXLAYERS )

C  Number of fine layer gradations 
C    (only for Chapman function calculations with refractive index)

      INTEGER            FINEGRID ( MAXLAYERS )

C  optical property inputs
C  -----------------------

C  multilayer optical property (bulk) inputs

      DOUBLE PRECISION
     &      OMEGA_TOTAL_INPUT  ( MAXLAYERS ),
     &      DELTAU_VERT_INPUT  ( MAXLAYERS )

C  Phase matrix generalized-spherical expansion coefficients
C   Include all that you require for exact single scatter calculations

      DOUBLE PRECISION  GREEKMAT_TOTAL_INPUT
     &      ( 0:MAXMOMENTS_INPUT, MAXLAYERS, MAXSTOKES_SQ )

C  D. Surface inputs
C  =================

C  BRDF names
C  ----------

      CHARACTER*10    BRDF_NAMES ( MAXBRDF_IDX )

C  IMPORTANT NOTE ---------------------------------------------
C   The following array "BRDF_CHECK_NAMES" of names is delared internally
C     in the code, and your entries will be checked against them!
C      CHARACTER*10 BRDF_CHECK_NAMES ( MAXBRDF_IDX )
C      DATA BRDF_CHECK_NAMES /
c     &     'Lambertian',
c     &     'Ross-thin ',
c     &     'Ross-thick',
c     &     'Li-sparse ',
c     &     'Li-dense  ',
c     &     'Hapke     ',
c     &     'Roujean   ',
c     &     'Rahman    ',  
c     &     'Cox-Munk  ',  
c     &     'GissCoxMnk',  
c     &     'RondHerman',  
c     &     'Breon     ',  
C     &     'BPDF08Veg ',  
c     &     'BPDF08Soil',
c     &     'BPDF2009  '
C  -------------------------------------------------------------
C    THIS LIST WAS REVISED On 11 May 2009, by R. SPURR
C  -------------------------------------------------------------

C  Surface variables and control (no Matrix stuff yet)
C  -----------------------------

C  Lambertian Surface control

      LOGICAL          DO_LAMBERTIAN_SURFACE
      LOGICAL          LAMBERTIAN_KERNEL_FLAG ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION LAMBERTIAN_ALBEDO

C   Number and index-list of bidirectional functions

      INTEGER          N_BRDF_KERNELS
      INTEGER          WHICH_BRDF ( MAX_BRDF_KERNELS )

C  Parameters required for Kernel families

      INTEGER          N_BRDF_PARAMETERS ( MAX_BRDF_KERNELS )
      DOUBLE PRECISION BRDF_PARAMETERS 
     &                 ( MAX_BRDF_KERNELS, MAX_BRDF_PARAMETERS )

C  Input kernel amplitude factors

      DOUBLE PRECISION BRDF_FACTORS ( MAX_BRDF_KERNELS )

C  Number of azimuth quadrature streams for BRDF

      INTEGER          NSTREAMS_BRDF

C  Number of independent matrix entries in the BRDF

      INTEGER          N_BRDF_STOKESSQ

C  Shadowing effect flag (only for Cox-Munk type kernels)

      LOGICAL          DO_SHADOW_EFFECT

C  Multiple reflectance correction for direct beam flag
C              (only for Cox-Munk type kernels)

      LOGICAL          DO_COXMUNK_DBMS

C  E. THERMAL INPUTS and CONTROLS
C  ==============================

C  Enabled in Version 2.4RT

C  Thermal blackbody emission in the atmosphere
C  --------------------------------------------

C   Overall flag for atmospheric thermal emission

      LOGICAL          DO_THERMAL_EMISSION

C    Default: N_THERMAL_COEFFS = 2. 
C         "Piecewise linear with Optical depth in each layer"

      INTEGER          N_THERMAL_COEFFS

C  input Planck function at layer boundaries in Watts/Sq m.

      DOUBLE PRECISION THERMAL_BB_INPUT (0:MAXLAYERS)

C  surface blackbody emission
C  --------------------------

C  input surface Planck function SURFBB in Watts/Sq m.

      LOGICAL          DO_SURFACE_EMISSION
      DOUBLE PRECISION SURFBB

C  Transmittance-only for thermal mode (Fast calculation)
C  -----------------------------------

C    Flag introduced July 31, 2007. No scattering in the RT

      LOGICAL          DO_THERMAL_TRANSONLY

C  F. Specialist Options
C  =====================

C  Flags

      LOGICAL          DO_SPECIALIST_OPTION_1
      LOGICAL          DO_SPECIALIST_OPTION_2
      LOGICAL          DO_SPECIALIST_OPTION_3

C  Number of upper layers with no multiple scattering
C    Only for use with specialist option 2

      INTEGER          NLAYERS_NOMS

C  Number of layers before source cutoff
C    Only for use with Specialist option 3

      INTEGER          NLAYERS_CUTOFF

C  G. commons
C  ==========

C  Key:
C   D = double precision variables
C   I = integer variables
C   L = logical variables
C   C = Character strings

      COMMON / VLIDORT_CONTROL_INPUTS /         
     L       DO_FULLRAD_MODE,         DO_SOLAR_SOURCES,
     L       DO_RAYLEIGH_ONLY,        DO_SSCORR_OUTGOING,
     L       DO_PLANE_PARALLEL,       DO_REFRACTIVE_GEOMETRY,
     L       DO_CHAPMAN_FUNCTION,     DO_DOUBLE_CONVTEST,
     L       DO_SSCORR_NADIR,         DO_DBCORRECTION,
     L       DO_SSCORR_TRUNCATION,    DO_SSFULL,
     L       DO_SOLUTION_SAVING,      DO_BVP_TELESCOPING,
     L       DO_DELTAM_SCALING,       DO_QUAD_OUTPUT,
     L       DO_ADDITIONAL_MVOUT,     DO_MVOUT_ONLY,
     L       DO_UPWELLING,            DO_DNWELLING,
     L       DO_WRITE_SCENARIO,       DO_WRITE_RESULTS,
     L       DO_WRITE_INPUT,          DO_WRITE_FOURIER,
     L       DO_DEBUG_WRITE,          DO_USER_VZANGLES

      COMMON / VLIDORT_MODEL_INPUTS /
     D       VLIDORT_ACCURACY,
     D       FLUX_FACTOR,      
     D       RFINDEX_PARAMETER,
     D       GEOMETRY_SPECHEIGHT,
     D       SZANGLES, SZA_LOCAL_INPUT, EARTH_RADIUS,
     D       USER_VZANGLES, USER_RELAZMS, USER_LEVELS,
     I       N_USER_VZANGLES, N_USER_RELAZMS, N_USER_LEVELS,
     I       N_SZANGLES, NSTOKES, NSTREAMS, NLAYERS, NFINELAYERS,
     I       NGREEK_MOMENTS_INPUT

      COMMON / VLIDORT_GEOPHYS_INPUTS /
     D     GREEKMAT_TOTAL_INPUT,
     D     OMEGA_TOTAL_INPUT,
     D     DELTAU_VERT_INPUT,
     D     HEIGHT_GRID, PRESSURE_GRID, TEMPERATURE_GRID,
     I     FINEGRID

      COMMON / VLIDORT_SURFACE_INPUTS / 
     D     BRDF_PARAMETERS, BRDF_FACTORS, LAMBERTIAN_ALBEDO,
     I     N_BRDF_KERNELS, N_BRDF_PARAMETERS,
     I     WHICH_BRDF, NSTREAMS_BRDF, N_BRDF_STOKESSQ, 
     L     LAMBERTIAN_KERNEL_FLAG, DO_LAMBERTIAN_SURFACE,
     L     DO_SHADOW_EFFECT, DO_COXMUNK_DBMS,
     C     BRDF_NAMES

      COMMON / VLIDORT_THERMAL_INPUTS / 
     D     SURFBB, THERMAL_BB_INPUT,
     I     N_THERMAL_COEFFS,
     L     DO_THERMAL_EMISSION,
     L     DO_SURFACE_EMISSION,
     L     DO_THERMAL_TRANSONLY

      COMMON / VLIDORT_SPECIALIST_INPUTS /
     I      NLAYERS_NOMS, NLAYERS_CUTOFF,
     L      DO_SPECIALIST_OPTION_1,
     L      DO_SPECIALIST_OPTION_2,
     L      DO_SPECIALIST_OPTION_3

C  These next two are really debug only

      COMMON / VLIDORT_CONTROL_FILENAMES /
     L       VLIDORT_ERROR_INIT,
     C       VLIDORT_ERROR_FILENAME, 
     C       INPUT_WRITE_FILENAME,   SCENARIO_WRITE_FILENAME,
     C       RESULTS_WRITE_FILENAME, FOURIER_WRITE_FILENAME

      COMMON / VLIDORT_FDEPS_INPUTS /
     D       FDEPSILON,
     L       DO_FDTEST

C  save statements

      SAVE   / VLIDORT_CONTROL_INPUTS    /
      SAVE   / VLIDORT_MODEL_INPUTS      /
      SAVE   / VLIDORT_GEOPHYS_INPUTS    /
      SAVE   / VLIDORT_SURFACE_INPUTS    /
      SAVE   / VLIDORT_THERMAL_INPUTS    /
      SAVE   / VLIDORT_SPECIALIST_INPUTS /

      SAVE   / VLIDORT_CONTROL_FILENAMES /
      SAVE   / VLIDORT_FDEPS_INPUTS      /

C  end of file.
