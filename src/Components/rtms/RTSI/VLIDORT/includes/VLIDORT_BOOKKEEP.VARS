C ###############################################################
C #                                                             #
C #                    THE VECTOR LIDORT MODEL                  #
C #                                                             #
C #  (Vector LInearized Discrete Ordinate Radiative Transfer)   #
C #   -      --         -        -        -         -           #
C #                                                             #
C ###############################################################

C ###############################################################
C #                                                             #
C #  Author :      Robert. J. D. Spurr                          #
C #                                                             #
C #  Address :      RT Solutions, inc.                          #
C #            9 Channing Street                                #
C #             Cambridge, MA 02138, USA                        #
C #            Tel: (617) 492 1183                              #
C #                                                             #
C #  Email :      rtsolutions@verizon.net                       #
C #                                                             #
C #  Versions     :   2.0, 2.2, 2.3, 2.4, 2.4R , 2.4RT          #
C #  Release Date :   December 2005  (2.0)                      #
C #  Release Date :   March 2007     (2.2)                      #
C #  Release Date :   October 2007   (2.3)                      #
C #  Release Date :   December 2008  (2.4)                      #
C #  Release Date :   April/May 2009 (2.4R)                     #
C #  Release Date :   July 2009      (2.4RT)                    #
C #                                                             #
C #       NEW: TOTAL COLUMN JACOBIANS         (2.4)             #
C #       NEW: BPDF Land-surface KERNELS      (2.4R)            #
C #       NEW: Thermal Emission Treatment     (2.4RT)           #
C #                                                             #
C ###############################################################

C    #####################################################
C    #                                                   #
C    #   This Version of VLIDORT comes with a GNU-style  #
C    #   license. Please read the license carefully.     #
C    #                                                   #
C    #####################################################

C  File of Book-keeping variables to VLIDORT
C  =========================================

C  Automatic input settings
C  ------------------------

C  All fourier components are output

      LOGICAL          DO_ALL_FOURIER

C  particular solution control
C    (classical solution is currently default in Version 2.0)

      LOGICAL          DO_DIRECT_BEAM
      LOGICAL          DO_CLASSICAL_SOLUTION

C  These book-keeping inputs are computed in VLIDORT_DERIVE_INPUTS
C     (called in the VLIDORT_MASTER and VLIDORT_L_MASTER modules).

C  Solar beam variables
C  --------------------

C  Fluxvector. Same for all solar beams

      DOUBLE PRECISION FLUXVEC(MAXSTOKES)

C  TOA solar zenith cosine and sine

      DOUBLE PRECISION COS_SZANGLES ( MAX_SZANGLES )
      DOUBLE PRECISION SIN_SZANGLES ( MAX_SZANGLES )

C  Local input solar zenith angles Cosines
C  ( Only required for refractive geometry attenuation of the solar beam)

      DOUBLE PRECISION SUN_SZA_COSINES(MAXLAYERS,MAX_SZANGLES)

C  Last layer to include Particular integral solution

      INTEGER          LAYER_PIS_CUTOFF(MAXBEAMS)

C  solar beam flags (always internal)

      LOGICAL          DO_MULTIBEAM (MAXBEAMS,0:MAXFOURIER)

C  Quadrature inputs
C  -----------------

!  Formerly X,A,AX,A5,SX,AD

      DOUBLE PRECISION QUAD_STREAMS (MAXSTREAMS)
      DOUBLE PRECISION QUAD_WEIGHTS (MAXSTREAMS)
      DOUBLE PRECISION QUAD_STRMWTS (MAXSTREAMS)
      DOUBLE PRECISION QUAD_HALFWTS (MAXSTREAMS)
      DOUBLE PRECISION QUAD_SINES   (MAXSTREAMS)
      DOUBLE PRECISION QUAD_STOKWTS (MAXSTREAMS)
      DOUBLE PRECISION QUAD_ANGLES  (MAXSTREAMS)

C  Mode of operation
C  -----------------

      LOGICAL          DO_MSMODE_VLIDORT

C  Do no azimuth flag moved here. 17 January 2006.

      LOGICAL          DO_NO_AZIMUTH

C  Integers
C  --------

C  Actual number of moments used in calculations
C   ( Normally 2 x NSTREAMS - 1 )

      INTEGER          NMOMENTS

C  NSTREAMS_2 = 2*NSTREAMS
C  total number of layers and streams NTOTAL = NSTREAMS_2 x NLAYERS
C  Number of super and sub diagonals in Band Matrix storage

      INTEGER          NSTREAMS_2
      INTEGER          NTOTAL
      INTEGER          N_SUBDIAG, N_SUPDIAG

C  NSTOKES_SQ     = NSTOKES * NSTOKES
C  NSTKS_NSTRMS   = NSTOKES * NSTREAMS
C  NSTKS_NSTRMS_2 = 2 * NSTKS_NSTRMS
C  NEIGENS_2      = 2 * NEIGENS

      INTEGER          NSTOKES_SQ
      INTEGER          NSTKS_NSTRMS, NSTKS_NSTRMS_2
      INTEGER          NEIGENS, NEIGENS_2

C  Number of beams = number of input solar zenith angles

      INTEGER          NBEAMS

C  Number of user streams = number of input view zenith angles

      INTEGER          N_USER_STREAMS

C  number of particular solutions

      INTEGER          NPARTICSOLS

C  Mueller matrix index

      INTEGER          MUELLER_INDEX   (MAXSTOKES,MAXSTOKES)
      INTEGER          MUELLER_DIAGONAL_INDEX(MAXSTOKES)

C  greek matrix index

      INTEGER          GREEKMAT_INDEX(6)

C  Performance Aspects
C  -------------------

C  Eigensolver operation

      LOGICAL          DO_REAL_EIGENSOLVER (0:MAXMOMENTS, MAXLAYERS)

C  Local flag for BVP assignment

      LOGICAL          BVP_REGULAR_FLAG (0:MAXMOMENTS)

C  Local flags for the solution svaing option

      INTEGER          LAYER_MAXMOMENTS    (MAXLAYERS)
      LOGICAL          DO_LAYER_SCATTERING (0:MAXMOMENTS, MAXLAYERS)

C  number of convergence streams and tests

      INTEGER          N_CONVTESTS
      INTEGER          N_CONV_STREAMS

C  User streams flag

      LOGICAL          DO_USER_STREAMS

C  Local start of user streams, baseline = 1

      INTEGER          LOCAL_UM_START

C  Book-keeping for the user defined output
C  ----------------------------------------

C  Number of directions (1 or 2) and directional array

      INTEGER          N_DIRECTIONS
      INTEGER          WHICH_DIRECTIONS ( MAX_DIRECTIONS )

C  Adjusted geometries

      DOUBLE PRECISION USER_VZANGLES_ADJUST (MAX_USER_VZANGLES)

      DOUBLE PRECISION SZANGLES_ADJUST 
     &     (MAX_USER_VZANGLES,MAX_SZANGLES,MAX_USER_RELAZMS)

      DOUBLE PRECISION USER_RELAZMS_ADJUST
     &     (MAX_USER_VZANGLES,MAX_SZANGLES,MAX_USER_RELAZMS)

C  Cosines/sines of user-defined (off-quadrature) stream angles

      DOUBLE PRECISION USER_STREAMS  (MAX_USER_STREAMS)
      DOUBLE PRECISION USER_SINES    (MAX_USER_STREAMS)
      DOUBLE PRECISION USER_SECANTS  (MAX_USER_STREAMS)

C  output angles

      INTEGER          N_OUT_STREAMS
      DOUBLE PRECISION OUT_ANGLES        (MAX_USER_STREAMS)

C  output optical depth masks and indices

      LOGICAL          PARTLAYERS_OUTFLAG  (MAX_USER_LEVELS)
      INTEGER          PARTLAYERS_OUTINDEX (MAX_USER_LEVELS)
      INTEGER          UTAU_LEVEL_MASK_UP  (MAX_USER_LEVELS)
      INTEGER          UTAU_LEVEL_MASK_DN  (MAX_USER_LEVELS)

C  off-grid optical depths (values, masks, indices)

      LOGICAL          DO_PARTLAYERS
      INTEGER          N_PARTLAYERS
      INTEGER          PARTLAYERS_LAYERFINEIDX (MAX_PARTLAYERS)
      INTEGER          PARTLAYERS_LAYERIDX     (MAX_PARTLAYERS)
      DOUBLE PRECISION PARTLAYERS_VALUES       (MAX_PARTLAYERS)

C  number of whole layer source terms required, + overall layers required

      INTEGER          N_LAYERSOURCE_UP
      INTEGER          N_LAYERSOURCE_DN
      INTEGER          N_ALLLAYERS_UP
      INTEGER          N_ALLLAYERS_DN

C  Layer masks for doing integrated source terms

      LOGICAL          STERM_LAYERMASK_UP(MAXLAYERS)
      LOGICAL          STERM_LAYERMASK_DN(MAXLAYERS)

C  help matrices
C  -------------

      DOUBLE PRECISION
     *     DMAT(MAXSTOKES,MAXSTOKES),
     *     I44(MAXSTOKES,MAXSTOKES),
     *     DANTE(MAXSTOKES),
     *     DBOTH(MAXSTOKES,MAXSTOKES), IONLY(MAXSTOKES),
     *     DMAT_PSOLS(MAXSTOKES,MAXSTOKES,MAX_PSOLS),
     *     DMAT_PSOLS_FLUXVEC(MAXSTOKES,MAX_PSOLS),
     *     DFLUX(MAXSTOKES)

C  note. 4 October 2005
C  ====================

C  For the Fourier summed output,  explicit geometrical indices
C  have been replaced with geometrical indexing system. This makes
C  for consistency with all LIDORT output.

C  indexing numbers

      INTEGER          N_GEOMETRIES, N_VIEWING

C  Offsets for geometry indexing

      INTEGER          SZA_OFFSETS(MAX_SZANGLES)
      INTEGER          VZA_OFFSETS(MAX_SZANGLES,MAX_USER_VZANGLES)

C  commons
C  =======

C   D = double precision variables
C   I = integer variables
C   L = logical variables

      COMMON / VLIDORT_AUTOMATIC_INPUTS /
     L       DO_DIRECT_BEAM,         
     L       DO_CLASSICAL_SOLUTION,   
     L       DO_ALL_FOURIER

      COMMON / VLIDORT_BOOKKEEP_INPUTS  /
     D   COS_SZANGLES, SIN_SZANGLES, SUN_SZA_COSINES, FLUXVEC,
     D   QUAD_STREAMS, QUAD_SINES,  QUAD_WEIGHTS,
     D   QUAD_STOKWTS, QUAD_HALFWTS, QUAD_STRMWTS, QUAD_ANGLES,
     D   USER_VZANGLES_ADJUST,SZANGLES_ADJUST, USER_RELAZMS_ADJUST,
     D   USER_STREAMS, USER_SINES, USER_SECANTS, 
     D   OUT_ANGLES, PARTLAYERS_VALUES,
     I   NMOMENTS, NSTREAMS_2, NTOTAL,
     I   N_SUBDIAG, N_SUPDIAG, NPARTICSOLS, NBEAMS,
     I   MUELLER_INDEX, MUELLER_DIAGONAL_INDEX,
     I   GREEKMAT_INDEX, NSTOKES_SQ,
     I   NEIGENS, NEIGENS_2, NSTKS_NSTRMS, NSTKS_NSTRMS_2,
     I   N_CONVTESTS, N_CONV_STREAMS, LOCAL_UM_START,
     I   N_DIRECTIONS, WHICH_DIRECTIONS, N_OUT_STREAMS,
     I   N_LAYERSOURCE_UP, N_LAYERSOURCE_DN,
     I   N_ALLLAYERS_UP, N_ALLLAYERS_DN, LAYER_PIS_CUTOFF,
     I   N_PARTLAYERS, PARTLAYERS_OUTINDEX,
     I   PARTLAYERS_LAYERIDX, PARTLAYERS_LAYERFINEIDX,
     I   UTAU_LEVEL_MASK_UP, UTAU_LEVEL_MASK_DN, 
     I   LAYER_MAXMOMENTS, N_USER_STREAMS,
     L   DO_LAYER_SCATTERING, DO_REAL_EIGENSOLVER, BVP_REGULAR_FLAG,
     L   DO_MSMODE_VLIDORT, DO_NO_AZIMUTH, DO_USER_STREAMS,
     L   PARTLAYERS_OUTFLAG, DO_MULTIBEAM,
     L   STERM_LAYERMASK_UP, STERM_LAYERMASK_DN, DO_PARTLAYERS

      COMMON / VLIDORT_GEOMETRY_OFFSETS /
     I    SZA_OFFSETS, VZA_OFFSETS, N_GEOMETRIES, N_VIEWING

      COMMON / VLIDORT_HELP_MATRICES/
     D       I44, DMAT, DANTE, DBOTH, IONLY, DFLUX,
     D       DMAT_PSOLS, DMAT_PSOLS_FLUXVEC 
 
      SAVE   / VLIDORT_GEOMETRY_OFFSETS  /
      SAVE   / VLIDORT_AUTOMATIC_INPUTS  /
      SAVE   / VLIDORT_BOOKKEEP_INPUTS   /
      SAVE   / VLIDORT_HELP_MATRICES     /

C  end of file.
